#include <libutl/libutl.h>
#include <libutl/DBresultRowIterator.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_CLASS_IMPL(utl::DBresultRowIterator);

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

void
DBresultRowIterator::initialize(const DBresult* result, uint64_t rowIdx)
{
    _result = result;
    _row = rowIdx;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

int
DBresultRowIterator::compare(const Object& rhs) const
{
    auto& it = utl::cast<DBresultRowIterator>(rhs);
    int res = AddressOrdering().cmp(_result, it._result);
    if (res != 0)
        return res;
    return utl::compare(_row, it._row);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
DBresultRowIterator::copy(const Object& rhs)
{
    auto& it = utl::cast<DBresultRowIterator>(rhs);
    _result = it._result;
    _row = it._row;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
DBresultRowIterator::steal(Object& rhs)
{
    auto& it = utl::cast<DBresultRowIterator>(rhs);
    _result = it._result;
    _row = it._row;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
DBresultRowIterator::seek(uint64_t row)
{
    _row = min(row, _result->numRows());
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
DBresultRowIterator::next()
{
    ASSERTD(ok());
    if (isEnd())
        return;
    ++_row;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
DBresultRowIterator::init()
{
    _result = nullptr;
    _row = uint64_t_max;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_END;
