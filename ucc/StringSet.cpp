#include <libutl/libutl.h>
#include <libutl/StringSet.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

StringSet::StringSet(bool owner)
{
    init(owner);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

bool
StringSet::add(const String& str)
{
    return Collection::add(str);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

String*
StringSet::find(const String& key) const
{
    return utl::cast<String>(RBtree::find(key));
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
StringSet::init(bool owner)
{
    setOwner(owner);
    setMultiSet(false);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_END;

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_CLASS_IMPL(utl::StringSet);

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_INSTANTIATE_TPL(utl::TRBtree, utl::String);
UTL_INSTANTIATE_TPL(utl::TRBtreeIt, utl::String);
