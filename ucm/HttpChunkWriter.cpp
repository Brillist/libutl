#include <libutl/libutl.h>
#include <libutl/HttpChunkWriter.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_CLASS_IMPL(utl::HttpChunkWriter);

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

HttpChunkWriter::HttpChunkWriter(Stream* stream, bool streamOwner)
    : BufferedStream(stream, streamOwner)
{
    init();
    setStream(stream, streamOwner, 0, KB(64));
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
HttpChunkWriter::underflow()
{
    ABORT();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
HttpChunkWriter::overflow()
{
    if (_oBufPos == 0)
        return;
    ASSERTD(_stream != nullptr);

    // write a chunk
    ASSERTD(_oBufPos <= KB(64));
    *_stream << Uint(_oBufPos).toHex() << "\r\n";
    _stream->write(_oBuf.get(), _oBufPos);
    *_stream << "\r\n";
    _oBufPos = 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_END;
